#!/usr/bin/env bash

cd "$(dirname "$0")" && source .lib/barerc || exit 1

# usage: ./csv-to-sqlite -d database.db -t table_name -f file.csv

case "$1" in
	"in")
		touch "$2"/import.db
		for item in "$2"/*.csv; do
			filename=$(basename -- "$item")
			tablename="${filename%.csv}"
			$0 -d "$2"/import.db -t "$tablename" -f "$item"
		done
		exit 0
		;;
	-h|--help)
		echo "Single CSV: ./csv-to-sqlite -d <database.db> -t <table_name> -f <file.csv>"
		echo "Bulk CSV: ./csv-to-sqlite in <directory>"
		exit 0
		;;
esac

# getops for command line arguments
while getopts d:t:f: option; do
	case "${option}" in
		d) DATABASE=${OPTARG};;
		t) TABLE=${OPTARG};;
		f) FILE=${OPTARG};;
		*) echo "usage: ./csv-to-sqlite -d database.db -t table_name -f file.csv"; exit 1;;
	esac
done

# check if database file exists
if [ ! -f "$DATABASE" ]; then
	echo "Database file does not exist"
	exit 1
fi

# check if csv file exists
if [ ! -f "$FILE" ]; then
	echo "CSV file does not exist"
	exit 1
fi

# check if table exists
if [ "$(sqlite3 "$DATABASE" ".schema $TABLE")" != "" ]; then
	echo "Table already exists"
	exit 1
fi

# get headers from csv file
HEADERS=$(head -n 1 "$FILE")

# create table
HEADERS_WITH_COMMA="${HEADERS//,/,}"
CREATE_TABLE="CREATE TABLE $TABLE (${HEADERS_WITH_COMMA})"

sqlite3 "$DATABASE" "$CREATE_TABLE"

# make a tmp csv file without the first line
TMP_FILE=$(mktemp)
tail -n +2 "$FILE" > "$TMP_FILE"

# insert data
sqlite3 "$DATABASE" <<EOF
.mode csv
.import $TMP_FILE $TABLE
EOF

# remove tmp file
rm "$TMP_FILE"

sqlite3 "$DATABASE" "$INSERT_DATA"

echo "Table $TABLE created in $DATABASE with data from $FILE"

exit 0