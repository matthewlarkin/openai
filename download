#!/usr/bin/env bash

./deps curl

[[ -t 0 ]] && url=$1 && shift || url=$(cat)

[[ -z $url ]] && echo "No URL provided" && exit 1

[[ $(validate url "$url") == 'false' ]] && echo "Invalid URL" && exit 1

# check if this is a YouTube link
[[ "$(youtube id "$url")" = 'Invalid YouTube URL' ]] && is_youtube=0 || is_youtube=1

# setup environment
output_name="$(random string 32)"
temp_file=".var/downloads/${output_name}"

if [[ "$is_youtube" = 1 ]]; then

	youtube download "$url" "$@" && exit 0

else

	# Download the file to a temporary location
	request "$url" --output "$temp_file"

	# Determine the MIME type
	mime_type=$(file --mime-type -b "$temp_file")

	# Map MIME type to extension
	declare -A mime_extension_map=(
		["image/png"]="png"
		["image/jpeg"]="jpg"
		["image/gif"]="gif"
		["image/webp"]="webp"
		["audio/mpeg"]="mp3"
		["video/mp4"]="mp4"
		["application/pdf"]="pdf"
		["application/json"]="json"
		["text/markdown"]="md"
		["text/plain"]="txt"
		["text/csv"]="csv"
		["application/zip"]="zip"
		["text/html"]="html"
	)

	extension="${mime_extension_map[$mime_type]}"

	[[ -z "$extension" ]] && echo "Unsupported MIME type: $mime_type" && exit 1

	# Construct the final output file name with the correct extension
	output_file=".var/downloads/${output_name}.${extension}"

	# Rename the file
	mv "$temp_file" "$output_file"

	echo "$output_file"
fi