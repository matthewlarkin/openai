#!/usr/bin/env bash

./deps jq

[[ -z "$POSTMARK_SERVER_TOKEN" ]] && {
	echo "POSTMARK_SERVER_TOKEN is not set"
} && exit 1

# set default from to BARE_EMAIL_FROM
from=$BARE_EMAIL_FROM

while [[ $# -gt 0 ]]; do
	case $1 in
		--to) to="$2"; shift 2 ;;
		--subject) subject="$2"; shift 2 ;;
		--body) body="$2"; shift 2 ;;
		--cc) cc="$2"; shift 2 ;;
		--attachment) attachment="$2"; shift 2 ;;
		--bcc) bcc="$2"; shift 2 ;;
		--from) from="$2"; shift 2 ;;
		--reply-to) reply_to="$2"; shift 2 ;;
		--template) template="$2"; shift 2 ;;
		*) break ;;
	esac
done

[[ -n "$template" ]] && body=$(./bare render "$template" "$@" --to-html);

# Single email mode
[[ -z "$to" ]] && echo "No recipient specified, use --to to specify a recipient" && exit 1
[[ -z "$subject" ]] && echo "No subject specified, use --subject to specify a subject" && exit 1
[[ -z "$body" ]] && echo "No body specified, use --body to specify a body" && exit 1

# if .var/email/signature.md exists, append it to the end of the email body
[[ -f ".var/email/signature.md" ]] && body="$body<p>- - -</p>$(./bare render email/signature.md --to-html)";

payload=$(jq -n \
	--arg from "$from" \
	--arg to "$to" \
	--arg subject "$subject" \
	--arg body "$body" \
	--arg cc "$cc" \
	--arg bcc "$bcc" \
	--arg reply_to "$reply_to" \
	'{
		"From": $from,
		"To": $to,
		"Subject": $subject,
		"HtmlBody": $body,
		"Cc": $cc,
		"Bcc": $bcc,
		"ReplyTo": $reply_to
	}'
)

response=$(./bare request https://api.postmarkapp.com/email \
	--json "$payload" \
	--header "X-Postmark-Server-Token: $POSTMARK_SERVER_TOKEN");

# else
echo "$response" | jq -r '.MessageID'