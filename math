#!/usr/bin/env bash

cd "$(dirname "$0")" && source .lib/barerc || exit 1

function main() {

	local operation
	local expression
	local output

	remaining_args=() && while [[ $# -gt 0 ]]; do
		case $1 in
			round|floor|ceiling|ceil) operation=$1 && shift ;;
			*) remaining_args+=("$1") && shift ;;
		esac
	done && set -- "${remaining_args[@]}"

	case $operation in

		round)

			number=$1
			decimals=${2:-0}
			shift 2

			[[
				$(validate number "$number") == 'false'
				||
				$(validate number "$decimals") == 'false'
			]] && echo "Error: invalid number" && exit 1

			output=$(php -r "echo number_format($number, $decimals, '.', '');")

			;;

		floor)

			number=$1
			shift

			[[ $(validate number "$number") == 'false' ]] && echo "Error: invalid number" && exit 1

			output=$(php -r "echo floor($number);")

			;;

		ceil|ceiling)

			number=$1
			shift

			[[ $(validate number "$number") == 'false' ]] && echo "Error: invalid number" && exit 1

			output=$(php -r "echo ceil($number);")

			;;

		*)

			# Concatenate all arguments into a single string
			expression="$*"

			# Use PHP to sanitize and evaluate the math operation
			output=$(php -r "\$math_operation = '$expression'; if (preg_match('/^[0-9+\-.*\/() ]+$/', \$math_operation)) { echo eval('return ' . \$math_operation . ';'); } else { echo 'Invalid input'; }")

			;;

	esac

	echo "$output" && exit 0

}

run_script "$@"