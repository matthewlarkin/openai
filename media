#!/usr/bin/env bash

./deps ffmpeg

command="$1" && shift

[[ -t 0 ]] && input="$1" && shift || input=$(cat)

remaining_args=() && while [[ $# -gt 0 ]]; do
	case $1 in
		--cleanup) remove_original=1 && shift ;;
		*) remaining_args+=("$1") && shift ;;
	esac
done && set -- "${remaining_args[@]}"

case $command in

    convert)

		output_extension="$1"
		output=".var/downloads/$(random string 32).$1"
		
		# Check if input file exists
		if [[ ! -f "$input" ]]; then
			echo "Error: Input file does not exist."
			exit 1
		fi
		
		if [[ "$output_extension" == "mp3" ]]; then
			# Extract audio and convert to MP3
			ffmpeg -y -i "$input" -vn -acodec libmp3lame "$output" -hide_banner -loglevel error
		else
			# Convert the input file to the desired output format
			ffmpeg -y -i "$input" -c:v libx264 -crf 28 -preset fast -c:a copy "$output" -hide_banner -loglevel error
		fi
		
		# Check if the output file was created
		if [[ ! -f "$output" ]]; then
			echo "Conversion failed."
			exit 1
		fi
		
		echo "$output"

		;;

	cut)
				
		extension="${input##*.}"
		start_time="$1"
		end_time="$2"
		output="${3:-.var/downloads/$(random string 32).$extension}"
		
		# Determine the output format based on the file extension
		extension="${input##*.}"
		
		case "$extension" in
			mp3)
				# Extract audio and cut to MP3
				ffmpeg -y -ss "$start_time" -to "$end_time" -i "$input" -q:a 0 -map a "$output" -hide_banner -loglevel error
				;;
			m4a)
				# Extract audio and cut to M4A
				ffmpeg -y -ss "$start_time" -to "$end_time" -i "$input" -c:a aac -b:a 192k -map a "$output" -hide_banner -loglevel error
				;;
			wav)
				# Extract audio and cut to WAV
				ffmpeg -y -ss "$start_time" -to "$end_time" -i "$input" -c:a pcm_s16le -map a "$output" -hide_banner -loglevel error
				;;
			flac)
				# Extract audio and cut to FLAC
				ffmpeg -y -ss "$start_time" -to "$end_time" -i "$input" -c:a flac -map a "$output" -hide_banner -loglevel error
				;;
			*)
				# Cut the input file to the desired output format
				ffmpeg -y -ss "$start_time" -to "$end_time" -i "$input" -c copy "$output" -hide_banner -loglevel error
				;;
		esac
		
		# Check if the output file was created
		if [[ ! -f "$output" ]]; then
			echo "Cut failed."
			exit 1
		fi
		
		echo "$output"

		;;

    *)
        exit 1
        ;;
esac

if [[ "$remove_original" == '1' ]]; then
	rm "$input"
fi

exit 0
